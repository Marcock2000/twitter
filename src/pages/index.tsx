import {  SignInButton,  useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);
import { api } from "~/utils/api";
import type  {RouterOutputs}  from "~/utils/api";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
import { useState } from "react";

const CreatePostWizard = () => {

  const {user} = useUser();
  const [input, setInput] = useState<string>("");
  const ctx = api.useContext();


  const {mutate, isLoading: isPosting } = api.posts.create.useMutation(
    {onSuccess: () => {setInput("");
  }}
  );


  console.log(user);
  if (!user) return null ;

  return (
  <div className="flex w-full gap-3 ">
    <Image src={user.profileImageUrl} 
    alt="Profile Image" 
    className="h-14 w-14 rounded-full "
    width={56}
    height={56}
    />
   <input 
      value={input}
      onChange={(e) => setInput(e.target.value)}
      disabled={isPosting}
      type="text" 
      placeholder="What's happening?" 
      className="bg-transparent rounded-md p-2 ml-4 w-full" 
      />
    <button 
      onClick={() => mutate({content: input})}
      className="bg-slate-400 text-white rounded-md p-2 ml-4 w-20">Chirp</button>
       
  </div>);
  } ;

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const {post,author} = props;
  return (
    <div key={post.id} className="border-b border-slate-400 p-4 flex">
      <Image src={author.profileImageUrl} alt="Profile Image" className="h-14 w-14 rounded-full " width={56} height={56}/>
      <div className="flex flex-col ml-4">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username} `}</span>
          <span className="font-thin">
             {`Â· ${dayjs(post.createdAt).fromNow()}` }
          </span>

        </div>
        <span className= "text-2xl">{post.content}</span>
        </div>
    </div>
  );
}

const Feed = () => {

  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading ) return <LoadingPage/>

  if (!data) return <div> Something went wrong</div>
return (
  <div className="flex flex-col">
  {data?.map((fullPost) => (
    <PostView {...fullPost} key= {fullPost.post.id}/>))}
</div>
)
  }
  
  // if both arent loaded


const Home: NextPage = () => {
  api.posts.getAll.useQuery();

  const { isLoaded: userLoaded, isSignedIn} = useUser();
  
  // if both arent loaded 
if (!userLoaded ) return <div/>



  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
      <div className="w-full h-full border-x border-slate-400 md:max-w-2xl">
        <div className= "flex border-b border-slate-400 p-4">
        {!isSignedIn && (
         <div className="flex justify-center">
          <SignInButton/>
          </div>
        )}
        {isSignedIn && (
        <CreatePostWizard/>)
         }
      </div> 
      <Feed/>

      </div>

      </main>
    </>
  );
};

export default Home;
